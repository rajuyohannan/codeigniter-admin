<?php

namespace Proxies\__CG__\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Users extends \Entity\Users implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', '' . "\0" . 'Entity\\Users' . "\0" . 'userId', '' . "\0" . 'Entity\\Users' . "\0" . 'userName', '' . "\0" . 'Entity\\Users' . "\0" . 'userEmail', '' . "\0" . 'Entity\\Users' . "\0" . 'userPass', '' . "\0" . 'Entity\\Users' . "\0" . 'userSalt', '' . "\0" . 'Entity\\Users' . "\0" . 'userLastLogin', '' . "\0" . 'Entity\\Users' . "\0" . 'userLoginTime', '' . "\0" . 'Entity\\Users' . "\0" . 'userSessionId', '' . "\0" . 'Entity\\Users' . "\0" . 'userDate', '' . "\0" . 'Entity\\Users' . "\0" . 'userModified', '' . "\0" . 'Entity\\Users' . "\0" . 'userAgentString', '' . "\0" . 'Entity\\Users' . "\0" . 'userLevel', '' . "\0" . 'Entity\\Users' . "\0" . 'userBanned', '' . "\0" . 'Entity\\Users' . "\0" . 'passwdRecoveryCode', '' . "\0" . 'Entity\\Users' . "\0" . 'passwdRecoveryDate');
        }

        return array('__isInitialized__', '' . "\0" . 'Entity\\Users' . "\0" . 'userId', '' . "\0" . 'Entity\\Users' . "\0" . 'userName', '' . "\0" . 'Entity\\Users' . "\0" . 'userEmail', '' . "\0" . 'Entity\\Users' . "\0" . 'userPass', '' . "\0" . 'Entity\\Users' . "\0" . 'userSalt', '' . "\0" . 'Entity\\Users' . "\0" . 'userLastLogin', '' . "\0" . 'Entity\\Users' . "\0" . 'userLoginTime', '' . "\0" . 'Entity\\Users' . "\0" . 'userSessionId', '' . "\0" . 'Entity\\Users' . "\0" . 'userDate', '' . "\0" . 'Entity\\Users' . "\0" . 'userModified', '' . "\0" . 'Entity\\Users' . "\0" . 'userAgentString', '' . "\0" . 'Entity\\Users' . "\0" . 'userLevel', '' . "\0" . 'Entity\\Users' . "\0" . 'userBanned', '' . "\0" . 'Entity\\Users' . "\0" . 'passwdRecoveryCode', '' . "\0" . 'Entity\\Users' . "\0" . 'passwdRecoveryDate');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Users $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getUserId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getUserId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUserId', array());

        return parent::getUserId();
    }

    /**
     * {@inheritDoc}
     */
    public function setUserName($userName)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUserName', array($userName));

        return parent::setUserName($userName);
    }

    /**
     * {@inheritDoc}
     */
    public function getUserName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUserName', array());

        return parent::getUserName();
    }

    /**
     * {@inheritDoc}
     */
    public function setUserEmail($userEmail)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUserEmail', array($userEmail));

        return parent::setUserEmail($userEmail);
    }

    /**
     * {@inheritDoc}
     */
    public function getUserEmail()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUserEmail', array());

        return parent::getUserEmail();
    }

    /**
     * {@inheritDoc}
     */
    public function setUserPass($userPass)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUserPass', array($userPass));

        return parent::setUserPass($userPass);
    }

    /**
     * {@inheritDoc}
     */
    public function getUserPass()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUserPass', array());

        return parent::getUserPass();
    }

    /**
     * {@inheritDoc}
     */
    public function setUserSalt($userSalt)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUserSalt', array($userSalt));

        return parent::setUserSalt($userSalt);
    }

    /**
     * {@inheritDoc}
     */
    public function getUserSalt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUserSalt', array());

        return parent::getUserSalt();
    }

    /**
     * {@inheritDoc}
     */
    public function setUserLastLogin($userLastLogin)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUserLastLogin', array($userLastLogin));

        return parent::setUserLastLogin($userLastLogin);
    }

    /**
     * {@inheritDoc}
     */
    public function getUserLastLogin()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUserLastLogin', array());

        return parent::getUserLastLogin();
    }

    /**
     * {@inheritDoc}
     */
    public function setUserLoginTime($userLoginTime)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUserLoginTime', array($userLoginTime));

        return parent::setUserLoginTime($userLoginTime);
    }

    /**
     * {@inheritDoc}
     */
    public function getUserLoginTime()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUserLoginTime', array());

        return parent::getUserLoginTime();
    }

    /**
     * {@inheritDoc}
     */
    public function setUserSessionId($userSessionId)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUserSessionId', array($userSessionId));

        return parent::setUserSessionId($userSessionId);
    }

    /**
     * {@inheritDoc}
     */
    public function getUserSessionId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUserSessionId', array());

        return parent::getUserSessionId();
    }

    /**
     * {@inheritDoc}
     */
    public function setUserDate($userDate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUserDate', array($userDate));

        return parent::setUserDate($userDate);
    }

    /**
     * {@inheritDoc}
     */
    public function getUserDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUserDate', array());

        return parent::getUserDate();
    }

    /**
     * {@inheritDoc}
     */
    public function setUserModified($userModified)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUserModified', array($userModified));

        return parent::setUserModified($userModified);
    }

    /**
     * {@inheritDoc}
     */
    public function getUserModified()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUserModified', array());

        return parent::getUserModified();
    }

    /**
     * {@inheritDoc}
     */
    public function setUserAgentString($userAgentString)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUserAgentString', array($userAgentString));

        return parent::setUserAgentString($userAgentString);
    }

    /**
     * {@inheritDoc}
     */
    public function getUserAgentString()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUserAgentString', array());

        return parent::getUserAgentString();
    }

    /**
     * {@inheritDoc}
     */
    public function setUserLevel($userLevel)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUserLevel', array($userLevel));

        return parent::setUserLevel($userLevel);
    }

    /**
     * {@inheritDoc}
     */
    public function getUserLevel()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUserLevel', array());

        return parent::getUserLevel();
    }

    /**
     * {@inheritDoc}
     */
    public function setUserBanned($userBanned)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUserBanned', array($userBanned));

        return parent::setUserBanned($userBanned);
    }

    /**
     * {@inheritDoc}
     */
    public function getUserBanned()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUserBanned', array());

        return parent::getUserBanned();
    }

    /**
     * {@inheritDoc}
     */
    public function setPasswdRecoveryCode($passwdRecoveryCode)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPasswdRecoveryCode', array($passwdRecoveryCode));

        return parent::setPasswdRecoveryCode($passwdRecoveryCode);
    }

    /**
     * {@inheritDoc}
     */
    public function getPasswdRecoveryCode()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPasswdRecoveryCode', array());

        return parent::getPasswdRecoveryCode();
    }

    /**
     * {@inheritDoc}
     */
    public function setPasswdRecoveryDate($passwdRecoveryDate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPasswdRecoveryDate', array($passwdRecoveryDate));

        return parent::setPasswdRecoveryDate($passwdRecoveryDate);
    }

    /**
     * {@inheritDoc}
     */
    public function getPasswdRecoveryDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPasswdRecoveryDate', array());

        return parent::getPasswdRecoveryDate();
    }

}
